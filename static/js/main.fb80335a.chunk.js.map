{"version":3,"sources":["redux/actions/productActions.js","redux/constants.js","redux/actions/errorActions.js","redux/actions/authActions.js","history.js","redux/actions/orderActions.js","components/OrderInput.js","components/OrdersList.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/AppNavbar.js","redux/reducers/orderReducer.js","redux/reducers/errorReducer.js","redux/reducers/productReducer.js","redux/reducers/authReducer.js","redux/reducers/index.js","redux/store.js","components/OrderEdit.js","App.js","serviceWorker.js","index.js"],"names":["getProductsStartAsync","dispatch","a","type","axios","get","response","data","payload","errorResponse","returnErrors","msg","status","id","clearErrors","tokenConfig","getState","token","auth","config","headers","createBrowserHistory","setOrdersLoading","OrderInput","state","flavour","numberOfScoops","pricePerScoop","totalCost","onSelect","e","obj","JSON","parse","target","value","setState","name","onChange","price","onSubmitForm","preventDefault","addOrderAsync","props","isAuthenticated","newOrder","parseInt","this","products","className","Alert","color","Form","onSubmit","onKeyPress","key","FormGroup","Label","for","Input","onClick","defaultValue","map","product","_id","stringify","min","Button","React","Component","connect","order","post","history","push","OrdersList","onDeleteClick","deleteOrder","getOrders","orders","style","marginBottom","href","ListGroup","ListGroupItem","to","bind","then","res","catch","err","delete","RegisterModal","modal","email","password","toggle","newUser","register","prevProps","error","NavLink","Modal","isOpen","ModalHeader","ModalBody","placeholder","marginTop","block","body","LoginModal","user","login","Logout","logout","AppNavbar","authLinks","NavItem","guestLinks","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","initialState","selectedOrder","sending","errorMessage","undefined","loading","localStorage","getItem","isLoading","combineReducers","action","filter","updatedOrders","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","OrderEdit","editOrder","editedOrder","match","params","fetchOrder","ownProps","put","finally","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.fb80335a.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n\tGET_PRODUCTS_START,\r\n\tGET_PRODUCTS_SUCCESS,\r\n\tGET_PRODUCTS_FAILURE,\r\n} from '../constants';\r\n\r\nexport const getProductsStart = (products) => ({\r\n\ttype: GET_PRODUCTS_START,\r\n});\r\n\r\nexport const getProductsSuccess = (products) => ({\r\n\ttype: GET_PRODUCTS_SUCCESS,\r\n\tpayload: products,\r\n});\r\n\r\nexport const getProductsFailure = (errorMessage) => ({\r\n\ttype: GET_PRODUCTS_FAILURE,\r\n\tpayload: errorMessage,\r\n});\r\n\r\nexport const getProductsStartAsync = () => async (dispatch) => {\r\n\tdispatch(getProductsStart());\r\n\ttry {\r\n\t\tconst response = await axios.get('/api/products');\r\n\t\tconst data = await response.data;\r\n\r\n\t\tdispatch(getProductsSuccess(data));\r\n\t} catch (error) {\r\n\t\tconst errorResponse = error.response.data || 'Something went wrong';\r\n\t\tdispatch(getProductsFailure(errorResponse));\r\n\t}\r\n};\r\n","// these are constants\r\n\r\nexport const GET_PRODUCTS_START = 'GET_PRODUCTS_START';\r\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\r\nexport const GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE';\r\nexport const ADD_ORDER_START = 'ADD_ORDER_START';\r\nexport const ADD_ORDER_SUCCESS = 'ADD_ORDER_SUCCESS';\r\nexport const ADD_ORDER_FAILURE = 'ADD_ORDER_FAILURE';\r\nexport const GET_ORDERS = 'GET_ORDERS';\r\nexport const FETCH_ORDER = 'FETCH_ORDER';\r\nexport const FETCH_ORDER_START = 'FETCH_ORDER_START';\r\nexport const FETCH_ORDER_FAILURE = 'FETCH_ORDER_FAILURE';\r\nexport const EDIT_ORDER = 'EDIT_ORDER';\r\nexport const DELETE_ORDER = 'DELETE_ORDER';\r\nexport const ORDERS_LOADING = 'ORDERS_LOADING';\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../constants';\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n\treturn {\r\n\t\ttype: GET_ERRORS,\r\n\t\tpayload: { msg, status, id },\r\n\t};\r\n};\r\n\r\n// CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n\treturn {\r\n\t\ttype: CLEAR_ERRORS,\r\n\t};\r\n};\r\n","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\n\r\nimport {\r\n\tUSER_LOADED,\r\n\tUSER_LOADING,\r\n\tAUTH_ERROR,\r\n\tLOGIN_SUCCESS,\r\n\tLOGIN_FAIL,\r\n\tLOGOUT_SUCCESS,\r\n\tREGISTER_SUCCESS,\r\n\tREGISTER_FAIL,\r\n} from '../constants';\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n\t// User loading\r\n\tdispatch({ type: USER_LOADING });\r\n\r\n\taxios\r\n\t\t.get('/api/auth/user', tokenConfig(getState))\r\n\t\t.then((res) =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_LOADED,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t)\r\n\t\t.catch((err) => {\r\n\t\t\tdispatch(returnErrors(err.response.data, err.response.status));\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_ERROR,\r\n\t\t\t});\r\n\t\t});\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => (dispatch) => {\r\n\t// Headers\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t};\r\n\r\n\t// Request body\r\n\tconst body = JSON.stringify({ name, email, password });\r\n\r\n\taxios\r\n\t\t.post('/api/users', body, config)\r\n\t\t.then((res) =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: REGISTER_SUCCESS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t)\r\n\t\t.catch((err) => {\r\n\t\t\tdispatch(\r\n\t\t\t\treturnErrors(err.response.data, err.response.status, 'REGISTER_FAIL')\r\n\t\t\t);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: REGISTER_FAIL,\r\n\t\t\t});\r\n\t\t});\r\n};\r\n\r\n// Login User\r\nexport const login = ({ email, password }) => (dispatch) => {\r\n\t// Headers\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t};\r\n\r\n\t// Request body\r\n\tconst body = JSON.stringify({ email, password });\r\n\r\n\taxios\r\n\t\t.post('/api/auth', body, config)\r\n\t\t.then((res) =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t)\r\n\t\t.catch((err) => {\r\n\t\t\tdispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_FAIL,\r\n\t\t\t});\r\n\t\t});\r\n};\r\n\r\n// Logout User\r\nexport const logout = () => {\r\n\treturn {\r\n\t\ttype: LOGOUT_SUCCESS,\r\n\t};\r\n};\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = (getState) => {\r\n\t// Get token from localstorage\r\n\tconst token = getState().auth.token;\r\n\r\n\t// Headers\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t},\r\n\t};\r\n\r\n\t// If token, add to headers\r\n\tif (token) {\r\n\t\tconfig.headers['x-auth-token'] = token;\r\n\t}\r\n\r\n\treturn config;\r\n};\r\n","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();\r\n","// import fetchingData from '../../apis/fetchingData';\r\nimport axios from 'axios';\r\nimport { tokenConfig } from './authActions';\r\nimport history from '../../history';\r\n\r\nimport {\r\n\tGET_ORDERS,\r\n\tADD_ORDER_START,\r\n\tADD_ORDER_SUCCESS,\r\n\tADD_ORDER_FAILURE,\r\n\tEDIT_ORDER,\r\n\tDELETE_ORDER,\r\n\tORDERS_LOADING,\r\n\tFETCH_ORDER,\r\n\tFETCH_ORDER_START,\r\n\tFETCH_ORDER_FAILURE,\r\n} from '../constants';\r\nimport { returnErrors } from './errorActions';\r\n\r\nexport const getOrders = () => (dispatch) => {\r\n\tdispatch(setOrdersLoading());\r\n\taxios\r\n\t\t.get('/api/')\r\n\t\t.then((res) =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_ORDERS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t)\r\n\t\t.catch((err) =>\r\n\t\t\tdispatch(returnErrors(err.response.data, err.response.status))\r\n\t\t);\r\n};\r\n\r\nexport const addOrderAsync = (order) => async (dispatch, getState) => {\r\n\tdispatch({ type: ADD_ORDER_START });\r\n\ttry {\r\n\t\t// const response = await fetchingData.post(\r\n\t\tconst response = await axios.post('/api', order, tokenConfig(getState));\r\n\t\tconst data = await response.data;\r\n\t\t// console.log(JSON.stringify(data) + 'after await');\r\n\t\tdispatch({ type: ADD_ORDER_SUCCESS, payload: data });\r\n\t\thistory.push('/');\r\n\t} catch (error) {\r\n\t\tconst errorResponse = error.response.data || 'Something went wrong';\r\n\r\n\t\tdispatch({ type: ADD_ORDER_FAILURE, payload: errorResponse });\r\n\t}\r\n};\r\n\r\nexport const fetchOrder = (id) => async (dispatch) => {\r\n\tdispatch({ type: FETCH_ORDER_START });\r\n\ttry {\r\n\t\tconst response = await axios.get(`/api/${id}`);\r\n\t\tconst data = await response.data;\r\n\t\tdispatch({ type: FETCH_ORDER, payload: data });\r\n\t} catch (error) {\r\n\t\tconst errorResponse = error.response || 'Something went wrong';\r\n\r\n\t\tdispatch({ type: FETCH_ORDER_FAILURE, payload: errorResponse });\r\n\t}\r\n};\r\n\r\nexport const editOrder = (order) => (dispatch) => {\r\n\taxios\r\n\t\t.put(`/api/${order._id}`, order)\r\n\t\t.then((res) =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EDIT_ORDER,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t)\r\n\t\t.catch((err) =>\r\n\t\t\tdispatch(returnErrors(err.response.data, err.response.status))\r\n\t\t)\r\n\t\t.finally(history.push('/'));\r\n};\r\n\r\nexport const deleteOrder = (id) => (dispatch) => {\r\n\taxios\r\n\t\t.delete(`/api/${id}`)\r\n\t\t.then((res) =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: DELETE_ORDER,\r\n\t\t\t\tpayload: id,\r\n\t\t\t})\r\n\t\t)\r\n\t\t.catch((err) =>\r\n\t\t\tdispatch(returnErrors(err.response.data, err.response.status))\r\n\t\t);\r\n};\r\n\r\nexport const setOrdersLoading = () => {\r\n\treturn {\r\n\t\ttype: ORDERS_LOADING,\r\n\t};\r\n};\r\n","import React from 'react';\r\n\r\nimport { Alert, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getProductsStartAsync } from '../redux/actions/productActions';\r\nimport { addOrderAsync } from '../redux/actions/orderActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass OrderInput extends React.Component {\r\n\tstate = {\r\n\t\tflavour: '',\r\n\t\tnumberOfScoops: '',\r\n\t\tpricePerScoop: '',\r\n\t\ttotalCost: '',\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tflavour: PropTypes.string,\r\n\t\tnumberOfScoops: PropTypes.number,\r\n\t\tpricePerScoop: PropTypes.number,\r\n\t\ttotalCost: PropTypes.number,\r\n\t};\r\n\r\n\tonSelect = (e) => {\r\n\t\tlet obj = JSON.parse(e.target.value);\r\n\t\tthis.setState({\r\n\t\t\tflavour: obj.name,\r\n\t\t\tpricePerScoop: obj.pricePerScoop,\r\n\t\t\tnumberOfScoops: null,\r\n\t\t\ttotalCost: null,\r\n\t\t});\r\n\t};\r\n\r\n\tonChange = (e) => {\r\n\t\tconst price = this.state.pricePerScoop;\r\n\t\tthis.setState({\r\n\t\t\tnumberOfScoops: e.target.value,\r\n\t\t\ttotalCost: e.target.value * price,\r\n\t\t});\r\n\t};\r\n\tonSubmitForm = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst { addOrderAsync } = this.props;\r\n\t\tconst isAuthenticated = this.props.isAuthenticated;\r\n\r\n\t\tconst newOrder = {\r\n\t\t\tflavour: this.state.flavour,\r\n\t\t\tnumberOfScoops: parseInt(this.state.numberOfScoops),\r\n\t\t\tpricePerScoop: this.state.pricePerScoop,\r\n\t\t\ttotalCost: this.state.totalCost,\r\n\t\t};\r\n\r\n\t\t//Add orders via addOrder action\r\n\t\tif (this.state.flavour && this.state.numberOfScoops) {\r\n\t\t\tthis.setState({ msg: null });\r\n\t\t\t// console.log(`trying to add order: ${JSON.stringify(newOrder)}`);\r\n\t\t\tif (!isAuthenticated) {\r\n\t\t\t\tthis.setState({ msg: 'Please log in to place order' });\r\n\t\t\t} else {\r\n\t\t\t\taddOrderAsync(newOrder);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.setState({ msg: 'Please enter all fields' });\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { getProductsStartAsync } = this.props;\r\n\t\tgetProductsStartAsync();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { products } = this.props.products;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container w-25\">\r\n\t\t\t\t<h1> Order one</h1>\r\n\t\t\t\t{this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert> : null}\r\n\r\n\t\t\t\t<Form\r\n\t\t\t\t\tclassName=\"form\"\r\n\t\t\t\t\tonSubmit={this.onSubmitForm}\r\n\t\t\t\t\tonKeyPress={() => (e) => {\r\n\t\t\t\t\t\te.key === 'Enter' && e.preventDefault();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label for=\"flavour\">Select Flavour </Label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\ttype=\"select\"\r\n\t\t\t\t\t\t\tname=\"flavour\"\r\n\t\t\t\t\t\t\tid=\"flavourSelect\"\r\n\t\t\t\t\t\t\tonClick={this.onSelect}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option defaultValue=\"- Pick one -\">Pick one !</option>\r\n\t\t\t\t\t\t\t{products.map((product) => (\r\n\t\t\t\t\t\t\t\t<option key={product._id} value={JSON.stringify(product)}>\r\n\t\t\t\t\t\t\t\t\t{product.name}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<p> The price / scoop is: ${this.state.pricePerScoop}</p>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label for=\"numberOfScoops\"> Number of Scoops </Label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tname=\"numberOfScoops\"\r\n\t\t\t\t\t\t\tid=\"numberOfScoops\"\r\n\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\tclassName=\"w-50\"\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<h2> Your total is ${this.state.totalCost}</h2>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t{this.props.isAuthenticated ? (\r\n\t\t\t\t\t\t<Button color=\"dark\" className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t\tAdd Order\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tproducts: state.products,\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\taddOrderAsync: (order) => dispatch(addOrderAsync(order)),\r\n\tgetProductsStartAsync: () => dispatch(getProductsStartAsync()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderInput);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getOrders, deleteOrder } from '../redux/actions/orderActions';\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass OrdersList extends Component {\r\n\tstate = {\r\n\t\tmsg: null,\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tisAuthenticated: PropTypes.bool,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { getOrders } = this.props;\r\n\t\tgetOrders();\r\n\t}\r\n\r\n\tshouldComponentUpdate() {\r\n\t\treturn true;\r\n\t}\r\n\tonDeleteClick = (id) => {\r\n\t\tthis.props.deleteOrder(id);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { orders } = this.props.orders;\r\n\t\treturn (\r\n\t\t\t<div className=\"container w-75\">\r\n\t\t\t\t<h1 className=\"\">Orders List</h1>\r\n\t\t\t\t{this.props.isAuthenticated ? (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"dark\"\r\n\t\t\t\t\t\tstyle={{ marginBottom: '2rem' }}\r\n\t\t\t\t\t\t// send user to create order page\r\n\t\t\t\t\t\thref=\"/orders/new\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd new order\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<h4 className=\"mb-3 ml-4\">Please log in to manage icecream orders</h4>\r\n\t\t\t\t)}\r\n\t\t\t\t<ListGroup className=\"w-75\">\r\n\t\t\t\t\t{orders.map((order) => (\r\n\t\t\t\t\t\t<ListGroupItem key={order._id} className=\"d-flex\">\r\n\t\t\t\t\t\t\t<div className=\"mr-auto p-2\">\r\n\t\t\t\t\t\t\t\t<p>{order.flavour}</p>\r\n\t\t\t\t\t\t\t\t<p>price: ${order.totalCost}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{this.props.isAuthenticated ? (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-warning p-2 mr-1\"\r\n\t\t\t\t\t\t\t\t\t\tto={`/orders/edit/${order._id}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger p-2\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.onDeleteClick.bind(this, order._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\torders: state.orders,\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tgetOrders: () => dispatch(getOrders()),\r\n\tdeleteOrder: (id) => dispatch(deleteOrder(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);\r\n","import React, { Component } from 'react';\r\nimport {\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tForm,\r\n\tFormGroup,\r\n\tLabel,\r\n\tInput,\r\n\tNavLink,\r\n\tAlert,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../redux/actions/authActions';\r\nimport { clearErrors } from '../../redux/actions/errorActions';\r\n\r\nclass RegisterModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tmsg: null,\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tisAuthenticated: PropTypes.bool,\r\n\t\terror: PropTypes.object.isRequired,\r\n\t\tregister: PropTypes.func.isRequired,\r\n\t\tclearErrors: PropTypes.func.isRequired,\r\n\t};\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst { error, isAuthenticated } = this.props;\r\n\t\tif (error !== prevProps.error) {\r\n\t\t\t// Check for register error\r\n\t\t\tif (error.id === 'REGISTER_FAIL') {\r\n\t\t\t\tthis.setState({ msg: error.msg.msg });\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ msg: null });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If authenticated, close modal\r\n\t\tif (this.state.modal) {\r\n\t\t\tif (isAuthenticated) {\r\n\t\t\t\tthis.toggle();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle = () => {\r\n\t\t// Clear errors first from the modal\r\n\t\tthis.props.clearErrors();\r\n\t\tthis.setState({\r\n\t\t\tmodal: !this.state.modal,\r\n\t\t});\r\n\t};\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { name, email, password } = this.state;\r\n\r\n\t\t// Create user object\r\n\t\tconst newUser = {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t};\r\n\r\n\t\t// Attempt to register\r\n\t\tthis.props.register(newUser);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<NavLink onClick={this.toggle} href=\"#\">\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t<Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>Register</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t{this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert> : null}\r\n\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label for=\"name\">Name</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"mb-3\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"mb-3\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"mb-3\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button color=\"dark\" style={{ marginTop: '2rem' }} block>\r\n\t\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\terror: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, clearErrors })(\r\n\tRegisterModal\r\n);\r\n","import React, { Component } from 'react';\r\nimport {\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tForm,\r\n\tFormGroup,\r\n\tLabel,\r\n\tInput,\r\n\tNavLink,\r\n\tAlert,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../redux/actions/authActions';\r\nimport { clearErrors } from '../../redux/actions/errorActions';\r\n\r\nclass LoginModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tmsg: null,\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tisAuthenticated: PropTypes.bool,\r\n\t\terror: PropTypes.object.isRequired,\r\n\t\tlogin: PropTypes.func.isRequired,\r\n\t\tclearErrors: PropTypes.func.isRequired,\r\n\t};\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst { error, isAuthenticated } = this.props;\r\n\t\tif (error !== prevProps.error) {\r\n\t\t\t// Check for register error\r\n\t\t\tif (error.id === 'LOGIN_FAIL') {\r\n\t\t\t\tthis.setState({ msg: error.msg.msg });\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ msg: null });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If authenticated, close modal\r\n\t\tif (this.state.modal) {\r\n\t\t\tif (isAuthenticated) {\r\n\t\t\t\tthis.toggle();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle = () => {\r\n\t\t// Clear errors\r\n\t\tthis.props.clearErrors();\r\n\t\tthis.setState({\r\n\t\t\tmodal: !this.state.modal,\r\n\t\t});\r\n\t};\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { email, password } = this.state;\r\n\r\n\t\tconst user = {\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t};\r\n\r\n\t\t// Attempt to login\r\n\t\tthis.props.login(user);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<NavLink onClick={this.toggle} href=\"#\">\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t<Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>Login</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t{this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert> : null}\r\n\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"mb-3\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"mb-3\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button color=\"dark\" style={{ marginTop: '2rem' }} block>\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\terror: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, clearErrors })(LoginModal);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/actions/authActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Logout extends Component {\r\n\tstatic propTypes = {\r\n\t\tlogout: PropTypes.func.isRequired,\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<NavLink onClick={this.props.logout} href=\"#\">\r\n\t\t\t\t\tLogout\r\n\t\t\t\t</NavLink>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(null, { logout })(Logout);\r\n","import React, { Component, Fragment } from 'react';\r\nimport {\r\n\tCollapse,\r\n\tNavbar,\r\n\tNavbarToggler,\r\n\tNavbarBrand,\r\n\tNav,\r\n\tNavItem,\r\n\tContainer,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport RegisterModal from './auth/RegisterModal';\r\nimport LoginModal from './auth/LoginModal';\r\nimport Logout from './auth/Logout';\r\n\r\nclass AppNavbar extends Component {\r\n\tstate = {\r\n\t\tisOpen: false,\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tauth: PropTypes.object.isRequired,\r\n\t};\r\n\r\n\ttoggle = () => {\r\n\t\tthis.setState({\r\n\t\t\tisOpen: !this.state.isOpen,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { isAuthenticated, user } = this.props.auth;\r\n\r\n\t\tconst authLinks = (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<NavItem>\r\n\t\t\t\t\t<span className=\"navbar-text mr-3\">\r\n\t\t\t\t\t\t<strong>{user ? `Welcome ${user.name}` : ''}</strong>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</NavItem>\r\n\t\t\t\t<NavItem>\r\n\t\t\t\t\t<Logout />\r\n\t\t\t\t</NavItem>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\r\n\t\tconst guestLinks = (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<NavItem>\r\n\t\t\t\t\t<RegisterModal />\r\n\t\t\t\t</NavItem>\r\n\t\t\t\t<NavItem>\r\n\t\t\t\t\t<LoginModal />\r\n\t\t\t\t</NavItem>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<NavbarBrand href=\"/\">Icecream Shop</NavbarBrand>\r\n\t\t\t\t\t\t<NavbarToggler onClick={this.toggle} />\r\n\t\t\t\t\t\t<Collapse isOpen={this.state.isOpen} navbar>\r\n\t\t\t\t\t\t\t<Nav className=\"ml-auto\" navbar>\r\n\t\t\t\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Navbar>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(AppNavbar);\r\n","import {\r\n\tGET_ORDERS,\r\n\tADD_ORDER_SUCCESS,\r\n\tADD_ORDER_START,\r\n\tADD_ORDER_FAILURE,\r\n\tEDIT_ORDER,\r\n\tDELETE_ORDER,\r\n\tORDERS_LOADING,\r\n\tFETCH_ORDER,\r\n\tFETCH_ORDER_START,\r\n\tFETCH_ORDER_FAILURE,\r\n} from '../constants';\r\n\r\nconst initialState = {\r\n\tselectedOrder: {},\r\n\torders: [],\r\n\tsending: false,\r\n\terrorMessage: undefined,\r\n};\r\n\r\nexport default function orderReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ORDERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\torders: action.payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase DELETE_ORDER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\torders: state.orders.filter((order) => order._id !== action.payload),\r\n\t\t\t};\r\n\t\tcase ADD_ORDER_START:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsending: true,\r\n\t\t\t};\r\n\t\tcase ADD_ORDER_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\torders: [action.payload, ...state.orders],\r\n\t\t\t\tsending: false,\r\n\t\t\t};\r\n\t\tcase ADD_ORDER_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsending: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tcase EDIT_ORDER:\r\n\t\t\tconst updatedOrders = state.orders.map((order) => {\r\n\t\t\t\tif (order._id === action.payload._id) {\r\n\t\t\t\t\torder = action.payload;\r\n\t\t\t\t}\r\n\t\t\t\treturn order;\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\torders: updatedOrders,\r\n\t\t\t};\r\n\t\tcase FETCH_ORDER_START:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t};\r\n\t\tcase FETCH_ORDER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedOrder: state.orders.filter(\r\n\t\t\t\t\t(order) => order._id === action.payload._id\r\n\t\t\t\t)[0],\r\n\t\t\t};\r\n\t\tcase FETCH_ORDER_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tcase ORDERS_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../constants';\r\n\r\nconst initialState = {\r\n\tmsg: {},\r\n\tstatus: null,\r\n\tid: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ERRORS:\r\n\t\t\treturn {\r\n\t\t\t\tmsg: action.payload.msg,\r\n\t\t\t\tstatus: action.payload.status,\r\n\t\t\t\tid: action.payload.id,\r\n\t\t\t};\r\n\t\tcase CLEAR_ERRORS:\r\n\t\t\treturn {\r\n\t\t\t\tmsg: {},\r\n\t\t\t\tstatus: null,\r\n\t\t\t\tid: null,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import {\r\n\tGET_PRODUCTS_START,\r\n\tGET_PRODUCTS_SUCCESS,\r\n\tGET_PRODUCTS_FAILURE,\r\n} from '../constants';\r\n\r\nconst initialState = {\r\n\tproducts: [],\r\n\tloading: false,\r\n\terrorMessage: undefined,\r\n};\r\n\r\nexport default function productReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_PRODUCTS_START:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\tcase GET_PRODUCTS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tproducts: action.payload,\r\n\t\t\t};\r\n\t\tcase GET_PRODUCTS_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terrorMessage: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import {\r\n\tUSER_LOADED,\r\n\tUSER_LOADING,\r\n\tAUTH_ERROR,\r\n\tLOGIN_SUCCESS,\r\n\tLOGIN_FAIL,\r\n\tLOGOUT_SUCCESS,\r\n\tREGISTER_SUCCESS,\r\n\tREGISTER_FAIL,\r\n} from '../constants';\r\n\r\nconst initialState = {\r\n\ttoken: localStorage.getItem('token'),\r\n\tisAuthenticated: null,\r\n\tisLoading: false,\r\n\tuser: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase USER_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: true,\r\n\t\t\t};\r\n\t\tcase USER_LOADED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tuser: action.payload,\r\n\t\t\t};\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\tcase REGISTER_SUCCESS:\r\n\t\t\tlocalStorage.setItem('token', action.payload.token);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t//next line returns the user and the token\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t};\r\n\t\tcase AUTH_ERROR:\r\n\t\tcase LOGIN_FAIL:\r\n\t\tcase LOGOUT_SUCCESS:\r\n\t\tcase REGISTER_FAIL:\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tuser: null,\r\n\t\t\t\tisAuthenticated: false,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport orderReducer from './orderReducer';\r\nimport errorReducer from './errorReducer';\r\nimport productReducer from './productReducer';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n\torders: orderReducer,\r\n\tproducts: productReducer,\r\n\terror: errorReducer,\r\n\tauth: authReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nif (process.env.NODE_ENV === 'development') {\r\n\tmiddleware.push(logger);\r\n}\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcompose(\r\n\t\tapplyMiddleware(...middleware),\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Alert, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport { getProductsStartAsync } from '../redux/actions/productActions';\r\nimport { editOrder, fetchOrder } from '../redux/actions/orderActions';\r\n\r\nclass OrderEdit extends React.Component {\r\n\tstate = {\r\n\t\tflavour: '',\r\n\t\tnumberOfScoops: '',\r\n\t\tpricePerScoop: '',\r\n\t\ttotalCost: '',\r\n\t};\r\n\r\n\tonSelect = (e) => {\r\n\t\tlet obj = JSON.parse(e.target.value);\r\n\t\tthis.setState({\r\n\t\t\tflavour: obj.name,\r\n\t\t\tpricePerScoop: obj.pricePerScoop,\r\n\t\t\tnumberOfScoops: null,\r\n\t\t\ttotalCost: null,\r\n\t\t});\r\n\t};\r\n\r\n\tonChange = (e) => {\r\n\t\tconst price = this.state.pricePerScoop;\r\n\t\tthis.setState({\r\n\t\t\tnumberOfScoops: e.target.value,\r\n\t\t\ttotalCost: e.target.value * price,\r\n\t\t});\r\n\t};\r\n\r\n\tonSubmitForm = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst { editOrder } = this.props;\r\n\t\tconst isAuthenticated = this.props.isAuthenticated;\r\n\r\n\t\tconst editedOrder = {\r\n\t\t\t_id: this.props.match.params.id,\r\n\t\t\tflavour: this.state.flavour,\r\n\t\t\tnumberOfScoops: parseInt(this.state.numberOfScoops),\r\n\t\t\tpricePerScoop: this.state.pricePerScoop,\r\n\t\t\ttotalCost: this.state.totalCost,\r\n\t\t};\r\n\r\n\t\t//Edit order via editOrder action\r\n\t\tif (this.state.flavour && this.state.numberOfScoops) {\r\n\t\t\tthis.setState({ msg: null });\r\n\t\t\t// console.log(`trying to add order: ${JSON.stringify(newOrder)}`);\r\n\t\t\tif (!isAuthenticated) {\r\n\t\t\t\tthis.setState({ msg: 'Please log in to edit order' });\r\n\t\t\t} else {\r\n\t\t\t\teditOrder(editedOrder);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.setState({ msg: 'Please enter all fields' });\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { getProductsStartAsync } = this.props;\r\n\t\tgetProductsStartAsync();\r\n\t\tconst { fetchOrder } = this.props;\r\n\t\tfetchOrder(this.props.match.params.id);\r\n\t\t// console.log(`id to fetch is ${this.props.match.params.id}`);\r\n\t}\r\n\r\n\trender() {\r\n\t\t// console.log(this.props);\r\n\t\tconst { products } = this.props.products;\r\n\t\tconst selectedOrder = this.props.selectedOrder;\r\n\r\n\t\tif (!selectedOrder) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\tplease, head back to the list of orders and click on the \"edit\" button\r\n\t\t\t\t\t\tnext to the order you want to edit\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<Link to=\"/\">Go to list</Link>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"container w-50\">\r\n\t\t\t\t<h1>Edit your order that had the flavour:</h1>\r\n\t\t\t\t<h2>{selectedOrder.flavour}</h2>\r\n\t\t\t\t{this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert> : null}\r\n\t\t\t\t<Form\r\n\t\t\t\t\tclassName=\"form w-75\"\r\n\t\t\t\t\tonSubmit={this.onSubmitForm}\r\n\t\t\t\t\tonKeyPress={() => (e) => {\r\n\t\t\t\t\t\te.key === 'Enter' && e.preventDefault();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label for=\"flavour\">Select Flavour </Label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\ttype=\"select\"\r\n\t\t\t\t\t\t\tname=\"flavour\"\r\n\t\t\t\t\t\t\tid=\"flavourSelect\"\r\n\t\t\t\t\t\t\tonClick={this.onSelect}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option defaultValue=\"- Pick one -\">Pick one !</option>\r\n\t\t\t\t\t\t\t{products.map((product) => (\r\n\t\t\t\t\t\t\t\t<option key={product._id} value={JSON.stringify(product)}>\r\n\t\t\t\t\t\t\t\t\t{product.name}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<p> The price / scoop is: ${this.state.pricePerScoop}</p>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label for=\"numberOfScoops\"> Number of Scoops </Label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tname=\"numberOfScoops\"\r\n\t\t\t\t\t\t\tid=\"numberOfScoops\"\r\n\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\tclassName=\"w-50\"\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<h2> Your total is ${this.state.totalCost}</h2>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t{this.props.isAuthenticated ? (\r\n\t\t\t\t\t\t<Button color=\"dark\" className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t\tEdit Order\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tselectedOrder: state.orders.selectedOrder,\r\n\torders: state.orders,\r\n\t// selectedOrder: state.orders[ownProps.match.params.id],\r\n\tproducts: state.products,\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tfetchOrder: (id) => dispatch(fetchOrder(id)),\r\n\teditOrder: (order) => dispatch(editOrder(order)),\r\n\tgetProductsStartAsync: () => dispatch(getProductsStartAsync()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEdit);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport OrderInput from './components/OrderInput';\r\nimport OrdersList from './components/OrdersList';\r\nimport AppNavbar from './components/AppNavbar';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { loadUser } from './redux/actions/authActions';\r\nimport OrderEdit from './components/OrderEdit';\r\n\r\nclass App extends Component {\r\n\tcomponentDidMount() {\r\n\t\tstore.dispatch(loadUser());\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<AppNavbar></AppNavbar>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={OrdersList} />\r\n\t\t\t\t\t\t<Route exact path=\"/orders/new\" component={OrderInput} />\r\n\t\t\t\t\t\t<Route exact path=\"/orders/edit/:id\" component={OrderEdit} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\nimport history from './history';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<Router history={history}>\n\t\t\t\t<App />\n\t\t\t</Router>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}